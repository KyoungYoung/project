"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TooManyRequests = exports.RequestTimeout = exports.NotFoundError = exports.UnauthorizedError = exports.BadRequest = void 0;
/* eslint-disable max-classes-per-file */
var BaseError = /** @class */ (function (_super) {
    __extends(BaseError, _super);
    function BaseError(code, message, errorCode) {
        var _this = _super.call(this, message) || this;
        _this.code = code;
        _this.errorCode = errorCode;
        return _this;
    }
    return BaseError;
}(Error));
var BadRequest = /** @class */ (function (_super) {
    __extends(BadRequest, _super);
    function BadRequest() {
        return _super.call(this, 0, 'Bad Request', 400) || this;
    }
    return BadRequest;
}(BaseError));
exports.BadRequest = BadRequest;
var UnauthorizedError = /** @class */ (function (_super) {
    __extends(UnauthorizedError, _super);
    function UnauthorizedError(code, message) {
        return _super.call(this, code, message, 401) || this;
    }
    return UnauthorizedError;
}(BaseError));
exports.UnauthorizedError = UnauthorizedError;
var NotFoundError = /** @class */ (function (_super) {
    __extends(NotFoundError, _super);
    function NotFoundError(code, message) {
        return _super.call(this, code, message, 404) || this;
    }
    return NotFoundError;
}(BaseError));
exports.NotFoundError = NotFoundError;
var RequestTimeout = /** @class */ (function (_super) {
    __extends(RequestTimeout, _super);
    function RequestTimeout() {
        return _super.call(this, 0, 'Request Timeout', 408) || this;
    }
    return RequestTimeout;
}(BaseError));
exports.RequestTimeout = RequestTimeout;
var TooManyRequests = /** @class */ (function (_super) {
    __extends(TooManyRequests, _super);
    function TooManyRequests(retryAfter) {
        var _this = _super.call(this, 0, 'Too many requests per IP', 429) || this;
        _this.retryAfter = retryAfter;
        return _this;
    }
    return TooManyRequests;
}(BaseError));
exports.TooManyRequests = TooManyRequests;
